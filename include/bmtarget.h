#ifndef GUARD_BMTARGET_H
#define GUARD_BMTARGET_H

void ForEachUnitInMovement(void(*func)(struct Unit* unit));
void ForEachUnitInRange(void(*func)(struct Unit* unit));
void ForEachPosInRange(void(*func)(int x, int y));
void ForEachAdjacentUnit(int x, int y, void(*func)(struct Unit* unit));
void ForEachAdjacentPosition(int x, int y, void(*func)(int x, int y));
void sub_8024FD8(int x, int y, void(*func)(int x, int y));
void ForEachPosIn12Range(int x, int y, void(*func)(int x, int y));
void ForEachUnitInMagBy2Range(void(*func)(struct Unit* unit));
void TryAddTrapsToTargetList();
void AddUnitToTargetListIfNotAllied(struct Unit* unit);
void MakeTargetListForWeapon(struct Unit* unit, int item);
void TryAddUnitToTradeTargetList(struct Unit* unit);
void MakeTradeTargetList(struct Unit* unit);
void TryAddUnitToRescueTargetList(struct Unit* unit);
void MakeRescueTargetList(struct Unit* unit);
void TryAddToDropTargetList(int x, int y);
void MakeDropTargetList(struct Unit* unit);
void TryAddRescuedUnitToTakeTargetList(struct Unit* unit);
void MakeTakeTargetList(struct Unit* unit);
void TryAddUnitToGiveTargetList(struct Unit* unit);
void MakeGiveTargetList(struct Unit* unit);
void TryAddUnitToTalkTargetList(struct Unit* unit);
void MakeTalkTargetList(struct Unit* unit);
void MakeTargetListForSupport(struct Unit* unit);
void AddUnitToTargetListIfAllied(struct Unit* unit);
void FillBallistaRangeMaybe(struct Unit* unit);
void TryAddClosedDoorToTargetList(int x, int y);
void TryAddBridgeToTargetList(int x, int y;
void MakeTargetListForDoorAndBridges(struct Unit* unit, int terrainId);
void sub_8025864(int x, int y);
void MakeTargetListForPick(struct Unit* unit);
void MakeTerrainHealTargetList(int faction);
void MakePoisonDamageTargetList(int faction);
void MakeGorgonEggHatchTargetList(int faction);
void TryAddUnitToRefreshTargetList(struct Unit* unit);
void MakeTargetListForRefresh(struct Unit* unit);
void AddAsTarget_IfCanStealFrom(struct Unit* unit);
void MakeTargetListForSteal(struct Unit* unit);
void AddAsTarget_IfPositionCleanForSummon(int x, int y);
void MakeTargetListForSummon(struct Unit* unit);
void sub_8025CD8(int x, int y);
void sub_8025D48(struct Unit* unit);
void sub_8025D80(struct Unit* unit);
void sub_8025DB8(struct Unit* unit);
void sub_8025DF0(struct Unit* unit);
void TryAddUnitToHealTargetList(struct Unit* unit);
void MakeTargetListForAdjacentHeal(struct Unit* unit);
void MakeTargetListForRangedHeal(struct Unit* unit);
void AddToTargetListIfNotAllied(struct Unit* unit);
void MakeTargetListForFuckingNightmare(struct Unit* unit);
void TryAddUnitToRestoreTargetList(struct Unit* unit);
void MakeTargetListForRestore(struct Unit* unit);
void TryAddUnitToBarrierTargetList(struct Unit* unit);
void MakeTargetListForBarrier(struct Unit* unit);
void TryAddUnitToRescueStaffTargetList(struct Unit* unit);
void MakeTargetListForRescueStaff(struct Unit* unit);
void TryAddUnitToSilenceTargetList(struct Unit* unit);
void TryAddUnitToSleepTargetList(struct Unit* unit);
void TryAddUnitToBerserkTargetList(struct Unit* unit);
void MakeTargetListForSilence(struct Unit* unit);
void MakeTargetListForSleep(struct Unit* unit);
void MakeTargetListForBerserk(struct Unit* unit);
void TryAddUnitToWarpTargetList(struct Unit* unit);
void MakeTargetListForWarp(struct Unit* unit);
void MakeTargetListForUnlock(struct Unit* unit);
void TryAddUnitToHammerneTargetList(struct Unit* unit);
void MakeTargetListForHammerne(struct Unit* unit);
void MakeTargetListForLatona(struct Unit* unit);
void sub_8026414(int unk);
void TryAddToMineTargetList(int x, int y);
void MakeTargetListForMine(struct Unit* unit);
void TryAddToLightRuneTargetList(int x, int y);
void MakeTargetListForLightRune(struct Unit* unit);
void TryAddUnitToDanceRingTargetList(struct Unit* unit);
void MakeTargetListForDanceRing(struct Unit* unit);

extern struct Unit* gSubjectUnit;

#endif // GUARD_BMTARGET_H
